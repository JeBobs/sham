<Project>
  <Target Name="AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisFxCopAnalyzers" BeforeTargets="CoreCompile" Condition="'$(SkipGlobalAnalyzerConfigForPackage)' != 'true'">
    <!-- PropertyGroup to compute global analyzer config file to be used -->
    <PropertyGroup>
      <!-- Set the default analysis mode, if not set by the user -->
      <_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers>$(AnalysisMode)</_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers>
      <_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers Condition="'$(_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers)' == ''">Default</_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers>

      <!-- GlobalAnalyzerConfig file name based on user specified package version 'MicrosoftCodeAnalysisFxCopAnalyzersRulesVersion', if any. We replace '.' with '_' to map the version string to file name suffix. -->
      <_GlobalAnalyzerConfigFileName_MicrosoftCodeAnalysisFxCopAnalyzers Condition="'$(MicrosoftCodeAnalysisFxCopAnalyzersRulesVersion)' != ''">AnalysisLevel_$(MicrosoftCodeAnalysisFxCopAnalyzersRulesVersion.Replace(".","_"))_$(_GlobalAnalyzerConfigAnalysisMode_MicrosoftCodeAnalysisFxCopAnalyzers).editorconfig</_GlobalAnalyzerConfigFileName_MicrosoftCodeAnalysisFxCopAnalyzers>
      
      <_GlobalAnalyzerConfigDir_MicrosoftCodeAnalysisFxCopAnalyzers Condition="'$(_GlobalAnalyzerConfigDir_MicrosoftCodeAnalysisFxCopAnalyzers)' == ''">$(MSBuildThisFileDirectory)config</_GlobalAnalyzerConfigDir_MicrosoftCodeAnalysisFxCopAnalyzers>
      <_GlobalAnalyzerConfigFile_MicrosoftCodeAnalysisFxCopAnalyzers Condition="'$(_GlobalAnalyzerConfigFileName_MicrosoftCodeAnalysisFxCopAnalyzers)' != ''">$(_GlobalAnalyzerConfigDir_MicrosoftCodeAnalysisFxCopAnalyzers)\$(_GlobalAnalyzerConfigFileName_MicrosoftCodeAnalysisFxCopAnalyzers)</_GlobalAnalyzerConfigFile_MicrosoftCodeAnalysisFxCopAnalyzers>
    </PropertyGroup>

    <ItemGroup Condition="Exists('$(_GlobalAnalyzerConfigFile_MicrosoftCodeAnalysisFxCopAnalyzers)')">
      <EditorConfigFiles Include="$(_GlobalAnalyzerConfigFile_MicrosoftCodeAnalysisFxCopAnalyzers)" />
    </ItemGroup>
  </Target>

  <!-- MSBuild properties to thread to the analyzers as options --> 
  <ItemGroup>
    <CompilerVisibleProperty Include="TargetFramework" />
    <CompilerVisibleProperty Include="TargetPlatformMinVersion" />
    <CompilerVisibleProperty Include="UsingMicrosoftNETSdkWeb" />
    <CompilerVisibleProperty Include="ProjectTypeGuids" />
    <CompilerVisibleProperty Include="PublishSingleFile" />
    <CompilerVisibleProperty Include="IncludeAllContentForSelfExtract" />
  </ItemGroup>

  <!-- MSBuild item metadata to thread to the analyzers as options -->
  <PropertyGroup>
    <_SupportedPlatformList>@(SupportedPlatform, ',')</_SupportedPlatformList>
  </PropertyGroup>

  <!-- MSBuild properties to thread to the analyzers as options --> 
  <ItemGroup>
    <CompilerVisibleProperty Include="_SupportedPlatformList" />
  </ItemGroup>

  <!--
    Design-time target to prevent the rule ids implemented in this package to be bumped to errors in the IDE
    when 'CodeAnalysisTreatWarningsAsErrors' = 'false'. Note that a similar 'WarningsNotAsErrors'
    property group is present in the generated props file to ensure this functionality on command line builds.
  -->
  <Target Name="_CodeAnalysisTreatWarningsNotAsErrors" BeforeTargets="CoreCompile" Condition="'$(CodeAnalysisTreatWarningsAsErrors)' == 'false' AND ('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true')">
    <PropertyGroup>
      <WarningsNotAsErrors>$(WarningsNotAsErrors);$(CodeAnalysisRuleIds)</WarningsNotAsErrors>
    </PropertyGroup>    
  </Target>

</Project>